Algoritmo integradorFinalPseint
	Definir m,i,j,cont Como Entero
	Definir genZ, palabra, car como cadena
	Definir validacionLetra Como Logico
	validacionLetra=Verdadero
	// Ingresar palabra y valide el que el tamaño sera correcto
	
Hacer
	Hacer
		Escribir "ingrese un gen de 9,16 o de 1369 caracteres máximo"
		leer palabra
		//palabra="CCADDBACCDDDDBDBCCABBAABDBCDCADDABABCDCDDABBBCABBABBDCADCCDABDDACDBBBDBDCCDDCABCAAAACDCDCCACDCDDADAADDACBDBCCDDBCBCBBAAADDAADCAABBBCBCCBCBDBCCBBCBABADAACDBDBADCBBACDADAADABBDBDBDBDCCDDCABCCCCCADBBBBCCDACCBBBDBDAADDBCCBCCBCBDDDDCCBAAACDDBBCAABAADABBBCCCCDCCBBDCDABCDACBCBACDBCCDABDBDCDCADCCBBADDBDCCADCCDCCACCDCDBCDBBADBAADBBCAADDABCAADADAABAACCBABDADADADDBCABDCCBBAADDDCDDCBADBCACCAAADCCDDABDBACBCAAADDBADBDACDDBDCBDCCCDDCACBCCCACCCCBACBAAAAACBCBCDAADCAACBCABDDABCBCBACCADABBBABBBBBAACADDDDBABACADAAABDDDCCDCACAACACADADBABACBABDBBADCDBBDACDCAABCADDBDBDCAABDCDABDDADDCDDBCBCDADCDBBDACABCDAABBCBADDDBCBADCABACDCABBCBCBCBCADBABBDBCCCADCADDCBABBDDDBBCBCDABACDDDABCCDBACCBDBADADDDAAACBDCDCCAACBDDCDCBADACDDDDBDCBAACDADBBDBDBCCACADBAABBAADAADDDACDDCDBDDBBDAADDAACCCACDBBBBBDCDCDDDABBCBAAADACADDCDCDCBCDCACAAABCADBDBBDDACCBBDABDDBCADCCCADDCDBACBBBDAADDCDAAADBBCDADBDBCBDDCAABCCDCCDCABCAACADADAACADDBBDABAABACDACDCDBBDDCCBCBCAAACBDBDBBBDBDBBCADCBACDCCBDACBBACBCADCDBACCADCDBDCDBBACBBCDCAAAAABCCDDCDDBBCBABCBCAABDBCCACBABDCABAACBDBDBCCCCADBBCDCCCAABADBACDDBADCDCAADDDCBDDBDCDCCCCCCCDBCDDBACBBCDACDADCACBDBBCCCDCCBCBCDACBDDDACCCAADBDBBDADDCCDDDBCDABCCBACCCCCBAACCBCABAAABBCABBCACCCABCDACBCDBDACACDDCACBCBBCCADABCBBDDABADDAAABACCBDCDABCBBBBACCDABAACDCACCCBBCDDACCDBCBCBAACBBBBADBCBCDABAAAABADAAAACDACADACDBBCCABADDDCACDCAACCDABBDBDAABADDBDCCCACDADBDDDCBBCBDCADCBCDAABDDDDBBBBCDDCC"
		//palabra="ACCDBBADDDCCBACABDCBDCBADBDACBBBBDAABBCCBAACCABDBDCDDABDBDADAAACBBBBCDDDCBBBDDCDABBDDABDBDBBACADCDAAADACDDDACCDCACDDABACDCCCAABDDCCACDADDBCBAACCDBCBCDDDCAACCBAADCBBBCDCBBACBDCCDDADBABCAABBACABDCAACCBDADDCAAACCDBDBBCDDDDDACBCDDADDDDCBADADBDCADDABBCDAACBCCDDDADDADADAACCACDCDDABCCCADABBACDACCAADDBCBCCDADBCCADAAABDDDAABBABCADDCCAADDCDDCDCACBADADACADDAADCBDBCDBDDACDCBCDCCABBDCBACDDACCCDADBCADCACAAABBBCADDDDBCBACDBDAAADDDACCDACBBBADACCCDCACCBACDADBCBBDADACABAACBCCADDCCCCACCCCADBCCDAADCAABBABAADDBDADDABABCCABBCDDACCADAAADBBCCDBADCADCBBDADACCDDBCAAABBBDCAAAACBAADBABBABACDDBBCBDCDCADABABBDADCBADAACDBCBDABADBCBADCACADAABCDDCABACDDBDCBCBDCAAACBDABBCACBACCCBACACDCADBDCDCDDCAACDBDCBACDBBDAABDBBCBAAADBABDBAACAAACDCDAAABABDDDBCACADCBBAADCCDABCCCBBCACCBAABDAADDDCDACDDDBCDCCBABDABACCDCDCDABAABCABBADADCBDDACDDCDDCDACDADADCACBCDABABDDCCDBCCDABACDBDAABDBDDDBADDBACABDCDDBACDDBBDDBBACBCCAACABBDADDBCAACCBCCDADDBCAADDADCCCBAAABABBBBBCABAACADBCBBABACCABCDAABADCCCCDCCADDDCCABBDDDAAADDADACBBBCBDAADACABABBAACCCADADDABDBCADDDCCDBBCCBCDCDBDDDDCACDACDBBBDDBADDACADDADDABCACDCBBADDABBBDCBBDCDAABADDDDDBCACCCCAAACBCBCDBACCCDACCCDBCBDCBADBCDDACCDBDBDBCAAACDDCBAABDBCAADCADDBABABDCBCBCBBBCACBCADDCAAAAAACBBACBBCCACBDCDDDDADCAAACBABDDBDADBAADCBABDDBCDBABDBAADDDBACBBBCCCDBDDBDDAADBBADADDDCBCACBABCDBBABAADABCABCDBACBBBCDBADADDBDCBDABBDDDCDDCCACDCBDCADABAABCDCAACCDDBADBDBCDACAAACBCADCCCBAC"
		palabra=Mayusculas(palabra)
		// Validacion si es A-B-C-D
		para i=0 hasta Longitud(palabra)-1 
			car=Subcadena(palabra,i,i)
			si car<> "A" y car<>"B" y car<>"C" y car<>"D"
			validacionLetra=Falso
			FinSi
		FinPara
	Mientras que validacionLetra=Falso
Mientras Que Longitud(palabra) <> 9 y Longitud(palabra) <> 16 y Longitud(palabra) <> 1369
	
	//Guarda la raiz cuadrara del tamaño de la palabra en una variable que será la DIMENSION DE LA MATRIZ
	m=rc(Longitud(palabra))
	//Crea la matriz
	Dimension genZ(m,m) 
	
	cont=0
	para i=0 hasta m-1
		para j=0 hasta m-1
			genZ(i,j)=Subcadena(palabra,cont,cont)
			cont=cont+1
		FinPara
	FinPara
	
	mostrarGen(genz,m)
	buscarCoincidencias(genZ,m)
	
FinAlgoritmo

	

Funcion ingresoGen(genZ Por Referencia,m)
	//1-ingresar gen (palabra)
	Definir i,j, cont Como Entero
	Definir palabra como cadena
	
	cont=0
	para i=0 hasta m-1
		para j=0 hasta m-1
			genZ(i,j)=Subcadena(palabra,cont,cont)
			cont=cont+1
		FinPara
	FinPara
	
FinFuncion

Funcion mostrarGen(genZ,m)
	definir i,j Como Entero
	Limpiar Pantalla
	Escribir "El gen ingresado es: "
	Escribir " "
	para i=0 hasta m-1
		para j=0 hasta m-1 
			escribir Sin Saltar "[",genZ(i,j),"]"
		FinPara
		Escribir " "
	FinPara
FinFuncion

Funcion buscarCoincidencias(genZ,m)
	Definir i,j, contDiag1, contDiag2 Como entero
	definir validacionDiagonal, validacionDiagonal2 como cadena
	Dimension validacionDiagonal(m),validacionDiagonal2(m)
	//3-Buscar coincidencias
	
	para i=0 hasta m-1
		para j=0 hasta m-1
			//llenar vector con 1era diagonal
			si i=j
			validacionDiagonal(i)=genZ(i,j)
		FinSi
		//llenar vector con 2da diagonal
			si i+j=m-1
				validacionDiagonal2(i)=genZ(i,j)
			FinSi
		FinPara
	FinPara
	
	
	//recorrer el vector
	contDiag1=0
	contDiag2=0
	para i=0 Hasta m-1
		si validacionDiagonal(i)=genZ(0,0)
			contDiag1= contDiag1+1
			//Tienen que llegar al tamaño de M
		FinSi
		si validacionDiagonal2(i)=genZ(0,m-1)
			contDiag2= contDiag2+1
			//Tienen que llegar al tamaño de M
		FinSi
	FinPara
	
	//Validacion Final
	si contDiag1=m y contDiag2=m Entonces
		Escribir "Se detecto el GenZ con las letras :",genZ(0,0)," y ",genZ(0,m-1)
	SiNo
		Escribir "No se detecto el genZ, las diagonales son distintas"
	FinSi
FinFuncion
	